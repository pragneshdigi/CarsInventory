System.register(["@angular/core","@angular/http","rxjs/Observable"],function(exports_1,context_1){"use strict";var core_1,http_1,Observable_1,AppService,__decorate=this&&this.__decorate||function(decorators,target,key,desc){var d,c=arguments.length,r=c<3?target:null===desc?desc=Object.getOwnPropertyDescriptor(target,key):desc;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--)(d=decorators[i])&&(r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r);return c>3&&r&&Object.defineProperty(target,key,r),r},__metadata=this&&this.__metadata||function(k,v){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(k,v)};context_1&&context_1.id;return{setters:[function(core_1_1){core_1=core_1_1},function(http_1_1){http_1=http_1_1},function(Observable_1_1){Observable_1=Observable_1_1}],execute:function(){AppService=function(){function AppService(http){this.http=http,this.carUrl="api/cars/car/",this.carDetailsUrl="api/cars/carDetails/",this.userUrl="api/cars/user/",this.loginUrl="api/cars/login/"}return AppService.prototype.login=function(email,password){if(null==email)throw new Error("email is required");if(null==password)throw new Error("password is required");var url=this.loginUrl+email+"/"+password;return this.http.get(url).map(function(response){return response.json()}).catch(this.handleError)},AppService.prototype.getCar=function(id){if(null==id)throw new Error("id is required");var url=this.carUrl+id;return this.http.get(url).map(function(response){return response.json()}).catch(this.handleError)},AppService.prototype.getCarDetails=function(id){if(null==id)throw new Error("id is required");var url=this.carDetailsUrl+id;return this.http.get(url).map(function(response){return response.json()}).catch(this.handleError)},AppService.prototype.saveCar=function(car){if(null==car)throw new Error("car is required");var url=this.carUrl;return this.http.post(url,car).map(function(response){return response.json()}).catch(this.handleError)},AppService.prototype.saveUser=function(user){if(null==user)throw new Error("user is required");var url=this.userUrl;return this.http.post(url,user).map(function(response){return response.json()}).catch(this.handleError)},AppService.prototype.handleError=function(error){return console.error(error),Observable_1.Observable.throw(error.json().error||"Server error")},AppService=__decorate([core_1.Injectable(),__metadata("design:paramtypes",[http_1.Http])],AppService)}(),exports_1("AppService",AppService)}}});
//# sourceMappingURL=app.service.js.map
